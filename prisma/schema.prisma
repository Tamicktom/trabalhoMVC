generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model CreditCard {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  number    String
  cvc       String
  expiry    String
  userId    String
  User      User     @relation(fields: [userId], references: [id])
}

model CreditCardToken {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  token     String
  userId    String
  User      User     @relation(fields: [userId], references: [id])
}

model User {
  id              String            @id @default(uuid())
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  email           String            @unique
  name            String?
  password        String
  role            Role              @default(USER)
  CreditCards     CreditCard[]
  CreditCardToken CreditCardToken[]
  Order           Order[]
}

enum Role {
  ADMIN
  USER
}

model Product {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String
  description String
  price       Float
  image       String
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  String
  Item        Item[]
}

model Category {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  name      String
  products  Product[]
}

model Order {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  User      User     @relation(fields: [userId], references: [id])
  items     Item[]
}

model Item {
  id         String   @id @default(uuid())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  quantity   Int
  productId  String
  Product    Product  @relation(fields: [productId], references: [id])
  orderId    String
  Order      Order    @relation(fields: [orderId], references: [id])
  orderPrice Float
}
